---
name: test
on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      gotestflags:
        type: string
        description: 'GOTEST_FLAGS to pass'
        required: false
        default: '--tags=integration'
  workflow_call:
    inputs:
      gotestflags:
        type: string
        description: 'GOTEST_FLAGS to pass'
        required: false
        default: '--tags=integration'
defaults:
  run:
    shell: bash

permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.action }}
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - name: set-aqua-policy-if-file-exists
        run: |
          if [ -f aqua-policy.yaml ]; then
            echo "AQUA_POLICY_CONFIG=${GITHUB_WORKSPACE}/aqua-policy.yaml:${AQUA_POLICY_CONFIG}" >> $GITHUB_ENV
          else
            echo "ðŸ‘‰ No aqua-policy.yaml file found, skipping setting AQUA_POLICY_CONFIG"
          fi
      - uses: aquaproj/aqua-installer@6ce1f8848ec8e61f14d57bd5d7597057a6dd187c # v3.0.1
        with:
          aqua_version: v2.30.0
          enable_aqua_install: true
          aqua_opts: '--tags test'
        env:
          AQUA_LOG_LEVEL: debug
          AQUA_OPTS: ''
      - name: env-config-go
        run: |
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      # no pinning of github managed action
      - name: Setup Golang caches
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        with:
          path: |
            ${HOME}/.cache/go-build
            ${HOME}/go/pkg/mod
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-
      # - name: mage-init
      #   run: |
      #     export PATH="${AQUA_ROOT_DIR:-${XDG_DATA_HOME:-$HOME/.local/share}/aquaproj-aqua}/bin/aqua:${PATH}"
      #     export PATH="$(go env GOPATH)/bin:${PATH}"
      #     mage init
      - name: mage-testsum
        run: |
          export PATH="${AQUA_ROOT_DIR:-${XDG_DATA_HOME:-$HOME/.local/share}/aquaproj-aqua}/bin/aqua:${PATH}"
          export PATH="$(go env GOPATH)/bin:${PATH}"
          USER_GOTESTFLAGS="${{ github.event.inputs.name }}"
          # Use user input or fall back to --tags=integration if nothing provided
          GOTEST_FLAGS=${USER_GOTESTFLAGS:-"--tags=integration"}
          mage go:testsum ./...
        env:
          # Race conditions will be hit due to the cli driven tasks and binaries being called.
          GOTEST_DISABLE_RACE: 1
          # GOTEST_FLAGS: '${{ inputs.gotestflags }}'

      - uses: codecov/codecov-action@1e68e06f1dbfde0e4cefc87efeba9e4643565303 # v5.1.2
        with:
          fail_ci_if_error: false
